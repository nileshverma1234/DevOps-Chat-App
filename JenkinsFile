pipeline {
   agent any
   tools {
        maven "Maven 3.8.6"
        //maven
   }
   
   stages {
        stage( 'Creating Artifact by Maven') {
            steps {
                sh "mvn clean package -DskipTests=true" 
                archive 'target/*.jar'
            }
        }

        stage('Maven Testing') {
            steps {
                sh "mvn test"
            }
            post{
                always{
                    junit (
                        allowEmptyResults:true,
                        testResults:'*test-reports/.xml'
                    )
                }
            }
        }

        stage('Static Analysis : SonarQube') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh "mvn clean verify sonar:sonar \
                    -Dsonar.projectKey=DevOps-Project \
                    -Dsonar.projectName='DevOps-Project' \
                    -Dsonar.host.url=http://3.110.49.209:9000"
                }
            }
        }
    //     stage("verify tooling") {
    //         steps {
    //             sh '''
    //             docker version
    //             docker info
    //             docker-compose version
    //             curl --version
    //             jq --version
    //             '''
    //         }
    //     }

    //     stage('Prune Docker data') {
    //         steps {
    //             sh 'docker system prune -a --volumes -f'
    //             sh 'docker-compose down --remove-orphans -v'
    //         }
    //     }

    //     stage('Start container') {
    //         steps {
    //             sh 'docker-compose build'
    //             sh 'docker-compose up -d'
    //             sh 'docker-compose ps'
    //         }
    //     }

    // }

    // post {
    //     always {
    //         sh 'docker-compose ps -a'
    //     }
    }

} 
  